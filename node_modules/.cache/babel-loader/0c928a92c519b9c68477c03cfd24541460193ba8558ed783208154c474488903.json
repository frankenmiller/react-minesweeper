{"ast":null,"code":"var _jsxFileName = \"/Users/dr_frankenmiller/Projects/react-minesweeper/src/Components/App/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"../Button/index\";\nimport NumberDisplay from \"../NumberDisplay\";\nimport { generateCells, openMultipleCells } from \"../../utils\";\nimport { NO_OF_BOMBS } from \"../../constants\";\nimport { Face, CellState, CellValue } from \"../../types\";\nimport \"./App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [cells, setCells] = useState(generateCells());\n  const [face, setFace] = useState(Face.smile);\n  const [time, setTime] = useState(0);\n  const [live, setLive] = useState(false);\n  const [bombCount, setBombCount] = useState(NO_OF_BOMBS);\n  useEffect(() => {\n    // <!--------------- handleMouse up/down useEffect()\n    const handleMouseDown = () => {\n      setFace(Face.apprehension);\n    };\n    const handleMouseUp = () => {\n      setFace(Face.smile);\n    };\n    window.addEventListener('mousedown', handleMouseDown);\n    window.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleMouseDown);\n      window.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, []); // <!--------- close ----------- handleMouse up/down useEffect()\n\n  useEffect(() => {\n    // <!------------------------ start timer useEffect()\n    if (live && time < 999) {\n      const timer = setInterval(() => {\n        // console.log(\"the Time: \", time, \" secs...\");\n        setTime(time + 1);\n      }, 1000);\n      return () => {\n        clearInterval(timer);\n      }; // return statement\n    } // if statement\n  }, [live, time]); // <!------------ close -------- start timer useEffect()\n\n  const handleCellClick = (rowParam, colParam) => () => {\n    // console.log(\"You've clicked on row: \",rowParam, \", col: \", colParam);\n\n    if (!live) {\n      setLive(true);\n    } // starts the game\n\n    const currentCell = cells[rowParam][colParam];\n    let newCells = cells.slice();\n    if (currentCell.state === CellState.flagged || currentCell.state === CellState.visible) {\n      return;\n    }\n    if (currentCell.value === CellValue.bomb) {} else if (currentCell.value === CellValue.none) {\n      newCells = openMultipleCells(newCells, rowParam, colParam);\n    } else {\n      newCells[rowParam][colParam].state = CellState.visible;\n      setCells(newCells);\n    }\n  }; // <!---------------------------- close -------------- handleCellClick()\n\n  const handleCellContext = (rowParam, colParam) => e => {\n    e.preventDefault();\n    if (!live) {\n      return;\n    } // if timer not ticking just do nothing\n\n    const currentCells = cells.slice();\n    const currentCell = cells[rowParam][colParam];\n    if (currentCell.state === CellState.visible) {\n      return;\n    } else if (currentCell.state === CellState.open) {\n      currentCells[rowParam][colParam].state = CellState.flagged;\n      setCells(currentCells);\n      setBombCount(bombCount - 1);\n    } else if (currentCell.state === CellState.flagged) {\n      currentCells[rowParam][colParam].state = CellState.open;\n      setBombCount(bombCount + 1);\n      setCells(currentCells);\n    }\n    // console.log(\"You've right-clicked row: \", rowParam, \", cell: \", colParam)\n  }; // <!-------- right-click ----------- close ------- handleCellContext()\n\n  const handleFaceClick = () => {\n    // <!------------- handleFaceClick()\n    if (live) {\n      setLive(false);\n      setTime(0);\n      setBombCount(NO_OF_BOMBS);\n      setCells(generateCells());\n    }\n  }; // <!---------------------------- close -------------- handleFaceClick()\n\n  const renderCells = () => {\n    // <!---------- renderCells()\n    return cells.map((row, rowIndex) => row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Button, {\n      row: rowIndex,\n      col: colIndex,\n      state: cell.state,\n      value: cell.value,\n      onClick: handleCellClick,\n      onContext: handleCellContext\n    }, `${rowIndex}-${colIndex}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)) // inner-map\n    ); // outer-map\n  }; // <!---------------------------------- close ------------- renderCells()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"monkeez\",\n      children: [\"Frankenmiller's Minesweeper \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 45\n      }, this), \" Game created Jan 2023 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 74\n      }, this), \" in React using Typescript\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(NumberDisplay, {\n        value: bombCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"face\",\n        onClick: handleFaceClick,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"face\",\n          children: face\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NumberDisplay, {\n        value: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Body\",\n      children: renderCells()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this); // return\n}; // <!--------------------------------------------------- close ----- App()\n_s(App, \"gKaTQSA24OjmVCijwHuDVdg0uc8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Button","NumberDisplay","generateCells","openMultipleCells","NO_OF_BOMBS","Face","CellState","CellValue","App","cells","setCells","face","setFace","smile","time","setTime","live","setLive","bombCount","setBombCount","handleMouseDown","apprehension","handleMouseUp","window","addEventListener","removeEventListener","timer","setInterval","clearInterval","handleCellClick","rowParam","colParam","currentCell","newCells","slice","state","flagged","visible","value","bomb","none","handleCellContext","e","preventDefault","currentCells","open","handleFaceClick","renderCells","map","row","rowIndex","cell","colIndex"],"sources":["/Users/dr_frankenmiller/Projects/react-minesweeper/src/Components/App/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"../Button/index\";\nimport NumberDisplay from \"../NumberDisplay\";\nimport { generateCells, openMultipleCells } from \"../../utils\";\nimport { NO_OF_BOMBS } from \"../../constants\";\nimport { Face, Cell, CellState, CellValue } from \"../../types\";\nimport \"./App.scss\";\nimport { open } from \"fs/promises\";\n\nconst App: React.FC = () => {\n    const [cells, setCells] = useState<Cell[][]>(generateCells());\n    const [face, setFace] = useState<Face>(Face.smile);\n    const [time, setTime] = useState<number>(0);\n    const [live, setLive] = useState<boolean>(false);\n    const [bombCount, setBombCount] = useState<number>(NO_OF_BOMBS);\n    \n    useEffect(() => { // <!--------------- handleMouse up/down useEffect()\n        const handleMouseDown = (): void => {\n            setFace(Face.apprehension);\n        }\n        const handleMouseUp = (): void => {\n            setFace(Face.smile);\n        }\n        window.addEventListener('mousedown', handleMouseDown);\n        window.addEventListener('mouseup', handleMouseUp);\n        return () => {\n            window.removeEventListener(\"mousedown\", handleMouseDown);\n            window.removeEventListener(\"mouseup\", handleMouseUp);\n        }\n    }, []); // <!--------- close ----------- handleMouse up/down useEffect()\n\n    useEffect (() => { // <!------------------------ start timer useEffect()\n        if (live && time < 999) {\n            const timer = setInterval(() => {\n                // console.log(\"the Time: \", time, \" secs...\");\n                setTime(time + 1);\n            }, 1000);\n            return () => {\n                clearInterval(timer);\n            }; // return statement\n        } // if statement\n    }, [live, time]); // <!------------ close -------- start timer useEffect()\n\n    const handleCellClick = (  // <!------------------------ handleCellClick()\n        rowParam: number, colParam: number\n    ) => (): void => {\n        // console.log(\"You've clicked on row: \",rowParam, \", col: \", colParam);\n        \n        if (!live) {setLive(true);} // starts the game\n\n        const currentCell = cells[rowParam][colParam];\n        let newCells = cells.slice();\n\n        if (currentCell.state === CellState.flagged || \n            currentCell.state === CellState.visible) {\n            return;\n        }\n        if (currentCell.value === CellValue.bomb) {\n\n        } else if (currentCell.value === CellValue.none) {\n            newCells = openMultipleCells(newCells, rowParam, colParam);\n        } else {\n            newCells[rowParam][colParam].state = CellState.visible;\n            setCells(newCells);\n        }\n    }; // <!---------------------------- close -------------- handleCellClick()\n\n    const handleCellContext = ( // <!--- right-click ----- handleCellContext()\n        rowParam: number, colParam: number\n    ) => (e: React.MouseEvent<HTMLDivElement, MouseEvent>): void => {\n        e.preventDefault();\n\n        if (!live) { return; } // if timer not ticking just do nothing\n\n        const currentCells = cells.slice();\n        const currentCell = cells[rowParam][colParam];\n\n        if (currentCell.state === CellState.visible) {\n            return;\n        } else if (currentCell.state === CellState.open) {\n            currentCells[rowParam][colParam].state = CellState.flagged;\n            setCells(currentCells);\n            setBombCount(bombCount - 1);\n        } else if (currentCell.state === CellState.flagged) {\n            currentCells[rowParam][colParam].state = CellState.open;\n            setBombCount(bombCount + 1);\n            setCells(currentCells);\n        }\n        // console.log(\"You've right-clicked row: \", rowParam, \", cell: \", colParam)\n    }; // <!-------- right-click ----------- close ------- handleCellContext()\n\n    const handleFaceClick = (): void => { // <!------------- handleFaceClick()\n        if (live) {\n            setLive(false);\n            setTime(0);\n            setBombCount(NO_OF_BOMBS);\n            setCells(generateCells());\n        }\n    } // <!---------------------------- close -------------- handleFaceClick()\n\n    const renderCells = (): React.ReactNode => { // <!---------- renderCells()\n        return cells.map((row, rowIndex) => \n        row.map((cell, colIndex) => \n            <Button \n                key={`${rowIndex}-${colIndex}`} \n                row={rowIndex} col={colIndex}\n                state={cell.state} value={cell.value}\n                onClick={handleCellClick}\n                onContext={handleCellContext}\n            />\n        ) // inner-map\n        ) // outer-map\n    } // <!---------------------------------- close ------------- renderCells()\n\n    return (\n        <div className=\"App\">\n            <div id=\"monkeez\">\n                Frankenmiller's Minesweeper <br /> Game created Jan 2023 <br /> in React using Typescript\n            </div>\n            <div className=\"Header\">\n                <NumberDisplay value={bombCount} />\n                <div className=\"face\" onClick={handleFaceClick} >\n                    <span role=\"img\" aria-label=\"face\">{face}</span>\n                </div>\n                <NumberDisplay value={time} />\n            </div>\n            <div className=\"Body\">{renderCells()}</div>\n        </div>\n    ) // return\n}; // <!--------------------------------------------------- close ----- App()\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}