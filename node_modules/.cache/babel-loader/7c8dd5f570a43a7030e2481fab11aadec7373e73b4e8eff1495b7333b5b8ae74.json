{"ast":null,"code":"var _jsxFileName = \"/Users/dr_frankenmiller/Projects/react-minesweeper/src/Components/Button/index.tsx\";\nimport React from \"react\";\nimport { CellState, CellValue } from \"../../types\";\nimport \"./Button.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    row,\n    col,\n    state,\n    value,\n    onClick\n  } = _ref;\n  const renderContent = () => {\n    // <!------ renderContent()\n    if (state === CellState.visible) {\n      if (value === CellValue.bomb) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"bomb\",\n          children: \"\\uD83D\\uDCA3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 24\n        }, this);\n      } else if (value === CellValue.none) {\n        return null;\n      }\n      return value;\n    } else if (state === CellState.flagged) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"flag\",\n        children: \"\\uD83C\\uDFF4\\u200D\\u2620\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this);\n    }\n    return null;\n  }; // <!------------------------------------------------- renderContent()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Button ${state === CellState.visible ? \"visible\" : \"\"} value-${value}`,\n    onClick: onClick(row, col),\n    children: renderContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","CellState","CellValue","Button","row","col","state","value","onClick","renderContent","visible","bomb","none","flagged"],"sources":["/Users/dr_frankenmiller/Projects/react-minesweeper/src/Components/Button/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { CellState, CellValue } from \"../../types\";\nimport \"./Button.scss\";\n\ninterface ButtonProps {\n    row: number;\n    col: number;\n    state: CellState;\n    value: CellValue;\n    onClick(rowParam: number, colParam: number): (...args: any[]) => void;\n}\n\nconst Button: React.FC<ButtonProps> = ({ row, col, state, value, onClick }) => {\n    \n    const renderContent = (): React.ReactNode => { // <!------ renderContent()\n        if (state === CellState.visible) {\n            if (value === CellValue.bomb) {\n                return <span role='img' aria-label=\"bomb\">üí£</span>\n            } else if (value === CellValue.none) {\n                return null;\n            }\n            return value;\n        } else if (state === CellState.flagged) {\n            return <span role='img' aria-label=\"flag\">üè¥‚Äç‚ò†Ô∏è</span>\n        }\n        return null\n    }; // <!------------------------------------------------- renderContent()\n    \n    return (\n        <div className={`Button ${state === CellState.visible ? \"visible\" : \"\"} value-${value}`}\n        onClick={onClick(row, col)}\n        >\n            {renderContent()}\n        </div>\n    );\n};\n\nexport default Button;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,SAAS,QAAQ,aAAa;AAClD,OAAO,eAAe;AAAC;AAUvB,MAAMC,MAA6B,GAAG,QAAyC;EAAA,IAAxC;IAAEC,GAAG;IAAEC,GAAG;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAQ,CAAC;EAEtE,MAAMC,aAAa,GAAG,MAAuB;IAAE;IAC3C,IAAIH,KAAK,KAAKL,SAAS,CAACS,OAAO,EAAE;MAC7B,IAAIH,KAAK,KAAKL,SAAS,CAACS,IAAI,EAAE;QAC1B,oBAAO;UAAM,IAAI,EAAC,KAAK;UAAC,cAAW,MAAM;UAAA,UAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAO;MACvD,CAAC,MAAM,IAAIJ,KAAK,KAAKL,SAAS,CAACU,IAAI,EAAE;QACjC,OAAO,IAAI;MACf;MACA,OAAOL,KAAK;IAChB,CAAC,MAAM,IAAID,KAAK,KAAKL,SAAS,CAACY,OAAO,EAAE;MACpC,oBAAO;QAAM,IAAI,EAAC,KAAK;QAAC,cAAW,MAAM;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO;IAC1D;IACA,OAAO,IAAI;EACf,CAAC,CAAC,CAAC;;EAEH,oBACI;IAAK,SAAS,EAAG,UAASP,KAAK,KAAKL,SAAS,CAACS,OAAO,GAAG,SAAS,GAAG,EAAG,UAASH,KAAM,EAAE;IACxF,OAAO,EAAEC,OAAO,CAACJ,GAAG,EAAEC,GAAG,CAAE;IAAA,UAEtBI,aAAa;EAAE;IAAA;IAAA;IAAA;EAAA,QACd;AAEd,CAAC;AAAC,KAvBIN,MAA6B;AAyBnC,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}