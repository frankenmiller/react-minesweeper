{"ast":null,"code":"import { MAX_ROWS, MAX_COLS } from \"../constants\";\nimport { CellValue, CellState } from \"../types\";\nexport const GenerateCells = () => {\n  const cells = [];\n  for (let row = 0; row < MAX_ROWS; row++) {\n    cells.push([]);\n    for (let col = 0; col < MAX_COLS; col++) {\n      cells[row].push({\n        value: CellValue.none,\n        state: CellState.open\n      });\n    }\n  }\n  return cells;\n};\n_c = GenerateCells;\nvar _c;\n$RefreshReg$(_c, \"GenerateCells\");","map":{"version":3,"names":["MAX_ROWS","MAX_COLS","CellValue","CellState","GenerateCells","cells","row","push","col","value","none","state","open"],"sources":["/Users/dr_frankenmiller/Projects/react-minesweeper/src/utils/index.ts"],"sourcesContent":["import { MAX_ROWS, MAX_COLS, NO_OF_BOMBS } from \"../constants\";\nimport { CellValue, CellState, Cell } from \"../types\";\n\nexport const GenerateCells = (): Cell[][] => {\n    const cells: Cell[][] = [];\n    for (let row=0; row<MAX_ROWS; row++) {\n        cells.push([]);\n        for (let col=0; col<MAX_COLS; col++) {\n            cells[row].push({\n                value: CellValue.none,\n                state: CellState.open\n            });\n        }\n    }\n    return cells;\n};"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAqB,cAAc;AAC9D,SAASC,SAAS,EAAEC,SAAS,QAAc,UAAU;AAErD,OAAO,MAAMC,aAAa,GAAG,MAAgB;EACzC,MAAMC,KAAe,GAAG,EAAE;EAC1B,KAAK,IAAIC,GAAG,GAAC,CAAC,EAAEA,GAAG,GAACN,QAAQ,EAAEM,GAAG,EAAE,EAAE;IACjCD,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC;IACd,KAAK,IAAIC,GAAG,GAAC,CAAC,EAAEA,GAAG,GAACP,QAAQ,EAAEO,GAAG,EAAE,EAAE;MACjCH,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,CAAC;QACZE,KAAK,EAAEP,SAAS,CAACQ,IAAI;QACrBC,KAAK,EAAER,SAAS,CAACS;MACrB,CAAC,CAAC;IACN;EACJ;EACA,OAAOP,KAAK;AAChB,CAAC;AAAC,KAZWD,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}